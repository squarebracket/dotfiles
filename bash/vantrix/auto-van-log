#!/bin/bash

van-log() {
    local logfile="$(_find_logfile $1)"
    local logconfig_file="$(_find_logconfig $1)"
    if [ -z "$logfile" ]; then
        echo "Log file not found for $1"
        return 1
    elif [ -z "$2" -o "$2" = "-o" -o "$2" = "--open-in-editor" ]; then
      # just open it
        $EDITOR $logfile
    elif [ "$2" = "--tail" -o "$2" = "-t" ]; then
     # tail it, dummy
        tail -F $logfile
    elif [ "$2" = "--current-log-level" -o "$2" = "-c" ]; then
        echo "$(_extract_log_level $logconfig_file)"
    elif [ "$2" = "--set-log-level" -o "$2" = "-s" ]; then
        _set_log_level "$logconfig_file" "$3"
    else
        echo "invalid arguments"
        return 1
    fi
}

_get_logfiles() {
    local logfiles=""
    if [ -d /var/opt/spotxde/log ]; then
        for logfile in /var/opt/spotxde/log/*.log
        do
            local temp1=${logfile#/var/opt/spotxde/log/*}
            local app=${temp1%*.log}
            logfiles="$logfiles $app"
            unset temp1
        done
    fi

    if [ -d /var/log/vantrix/localhost/ ]; then
        for logfile in /var/log/vantrix/localhost/*/*.log
        do
            local temp1=${logfile#/var/log/vantrix/localhost/*}
            local app=${temp1%*/*.log}

            logfiles="$logfiles $app"
        done
    fi

    if [ -n "$logfiles" ]; then
        echo $logfiles
        return 0
    fi
    return 1
}

_get_logconfigs() {
    local logconfigs=""
    if [ -d /opt/spotxde/etc ]; then
        for logconfig in /opt/spotxde/etc/*/logconfig.xml
        do
            local temp1=${logconfig#/opt/spotxde/etc/*}
            local app=${temp1%*/logconfig.xml}
            local logconfigs="$logconfigs $app"
            unset temp1
        done
    fi

    if [ -d /var/opt/spotxde ]; then
        for logconfig in /var/opt/spotxde/*/conf/*/conf/logconfig.xml
        do
            local temp1=${logconfig#/var/opt/spotxde/*}
            local app=${temp1%*/conf/*/conf/logconfig.xml}

            local temp2=${temp1#*/conf/*}
            local instance=${temp2%*/conf/logconfig.xml}

            local logconfigs="$logconfigs $app/$instance"
        done
    fi

    if [ -n "$logconfigs" ]; then
        echo $logconfigs
        return 0
    fi
    return 1
}

_find_logfile() {
    if [ -z "$1" ]; then
        return 1
    fi
    local app=${1%*/*}
    local instance=${1#*/*}
    if [ -f "/var/opt/spotxde/log/${app}.log" ]; then
        local logfile_path="/var/opt/spotxde/log/${app}.log"
    elif [ -f "/var/log/vantrix/localhost/${app}/${app}.log" ]; then
        local logfile_path="/var/log/vantrix/localhost/${app}/${app}.log"
    fi
    if [ -n "$logfile_path" ]; then
        # conf was found
        echo $logfile_path
        return 0
    else
        return 1
    fi
}

_find_logconfig() {
    if [ -z "$1" ]; then
        return 1
    fi
    local app=${1%*/*}
    local instance=${1#*/*}
    if [ -f "/opt/spotxde/etc/${app}/logconfig.xml" ]; then
        local logconfig_path="/opt/spotxde/etc/${app}/logconfig.xml"
    elif [ -f "/var/opt/spotxde/${app}/conf/${instance}/conf/logconfig.xml" ]; then
        local logconfig_path="/var/opt/spotxde/${app}/conf/${instance}/conf/logconfig.xml"
    fi
    if [ -n "$logconfig_path" ]; then
        # conf was found
        echo $logconfig_path
        return 0
    else
        return 1
    fi
}

_extract_log_level() {
    grep '<priority class="cVanLogLevel" value="\(.*\)"/>' < $1 | grep -o -P '(?<=value=").*(?="/>)'
}

_set_log_level() {
    sed -i.bak "s|<priority \(class=\"cVanLogLevel\" \)\?value=\".*\"/>|<priority \1value=\"$2\"/>|" $1
}

_complete_van-log() {
    COMPREPLY=()
    local cur="${COMP_WORDS[COMP_CWORD]}"
    if [ "$COMP_CWORD" = 1 ]; then
        local logs=`_get_logconfigs`
        COMPREPLY=( $( compgen -W "${logs}" -- ${cur} ) )
    elif [ "$COMP_CWORD" -eq 2 ]; then
        local opts="-c -s -o -t --current-log-level --set-log-level --open-in-editor --tail"
        COMPREPLY=( $( compgen -W "${opts}" -- ${cur} ) )
    fi

    return 0
}

complete -F _complete_van-log van-log
